// Mocks generated by Mockito 5.3.0 from annotations
// in mocito_demo/test/iss_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;
import 'dart:math' as _i3;

import 'package:http/http.dart' as _i2;
import 'package:mocito_demo/iss.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeClient_0 extends _i1.SmartFake implements _i2.Client {
  _FakeClient_0(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakePoint_1<T extends num> extends _i1.SmartFake
    implements _i3.Point<T> {
  _FakePoint_1(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

/// A class which mocks [IssLocator].
///
/// See the documentation for Mockito's code generation for more information.
class MockIssLocator extends _i1.Mock implements _i4.IssLocator {
  MockIssLocator() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Client get client => (super.noSuchMethod(Invocation.getter(#client),
          returnValue: _FakeClient_0(this, Invocation.getter(#client)))
      as _i2.Client);
  @override
  _i3.Point<double> get currentPosition => (super.noSuchMethod(
          Invocation.getter(#currentPosition),
          returnValue:
              _FakePoint_1<double>(this, Invocation.getter(#currentPosition)))
      as _i3.Point<double>);
  @override
  _i5.Future<void> update() => (super.noSuchMethod(
      Invocation.method(#update, []),
      returnValue: _i5.Future<void>.value(),
      returnValueForMissingStub: _i5.Future<void>.value()) as _i5.Future<void>);
}
